import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

#Dataset link:https://www.kaggle.com/c/house-prices-advanced-regression-techniques/data
# Load the dataset (replace 'train.csv' with your file path)
data = pd.read_csv('train.csv')

# Extract the features (square footage, bedrooms, bathrooms) and target (house prices)
X = data[['GrLivArea', 'BedroomAbvGr', 'FullBath']].values
y = data['SalePrice'].values

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()

# Fit the model on the training data
model.fit(X_train, y_train)

# Make predictions on the test data
y_pred = model.predict(X_test)

# Calculate the mean squared error
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse:.2f}')

# Calculate the R-squared (coefficient of determination)
r2 = r2_score(y_test, y_pred)
print(f'R-squared (Coefficient of Determination): {r2:.2f}')

# To make predictions on new data, you can use the model.predict() method.
# For example, if you have a new data point with square footage, bedrooms, and bathrooms:
new_data = np.array([[2000, 3, 2]])  # Replace with your own values
predicted_price = model.predict(new_data)
print(f'Predicted Price: ${predicted_price[0]:,.2f}')
